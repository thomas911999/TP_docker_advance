version: '3.5'

services:
  frontend:
    image: ${REGISTRY:-localhost}/tp-docker-frontend:latest
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - VITE_API_URL=/api
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        delay: 10s

  backend:
    image: ${REGISTRY:-localhost}/tp-docker-backend:latest
    build:
      context: .
      dockerfile: docker/backend/Dockerfile.prod
    networks:
      - app-network
    environment:
      - APP_ENV=prod
      - APP_SECRET=votre_secret_ici
      - DATABASE_URL=mongodb://symfony:password@mongodb:27017/symfony?authSource=admin
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
    networks:
      - app-network
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        order: start-first

  mongodb:
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=symfony
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=symfony
    command: ["mongod", "--auth"]
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

networks:
  app-network:
    driver: overlay

volumes:
  mongodb_data:
    driver: local

configs:
  nginx_config:
    file: ./config/nginx/nginx.prod.conf